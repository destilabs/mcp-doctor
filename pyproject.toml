[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-doctor"
version = "0.1.0"
description = "ðŸ©º A diagnostic tool for MCP servers - analyze agent-friendliness, debug issues, and ensure best practices compliance"
readme = "README.md"
authors = [
    {name = "Destilabs", email = "mykhailo.kushnir@destilabs.com"},
]
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "typer[all]>=0.9.0",
    "httpx>=0.24.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "langsmith>=0.1.69",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "coverage[toml]>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",
    "ruff>=0.6.0",
]

[project.scripts]
mcp-doctor = "mcp_analyzer.cli:app"

[project.urls]
Homepage = "https://github.com/destilabs/mcp-doctor"
Repository = "https://github.com/destilabs/mcp-doctor"
Issues = "https://github.com/destilabs/mcp-doctor/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_analyzer"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/site-packages/*",
    "setup.py",
    "conftest.py",
    "src/mcp_analyzer/mcp_client.py",
    "src/mcp_analyzer/mcp_sse_client.py",
    "src/mcp_analyzer/mcp_stdio_client.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 2
fail_under = 29

[tool.coverage.html]
directory = "htmlcov"
title = "MCP Doctor Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/mcp_analyzer",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
    "--cov-fail-under=80",
    "-v",
]
asyncio_mode = "auto"

# Ruff configuration (linting)
[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable common rule sets: 
#  - E/W (pycodestyle), F (pyflakes), I (import sorting via isort)
select = ["E", "F", "W", "I"]
ignore = []

[tool.ruff.lint.isort]
combine-as-imports = true
